Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.main) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.main) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.main) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.main) refers to hardware_init.o(.text.Hardware_init) for Hardware_init
    main.o(.text.main) refers to sys_init.o(.text.sys_init) for sys_init
    main.o(.text.main) refers to lks32mc08x_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    main.o(.text.main) refers to noretval__2printf.o(.text) for __2printf
    main.o(.text.main) refers to global_variable.o(.bss.struFOC_CtrProc) for struFOC_CtrProc
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.ARM.use_no_argv) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.use_no_argv) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.use_no_argv) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_sys.o(.text.DSP_Init) for DSP_Init
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_adc.o(.text.ADC_StructInit) for ADC_StructInit
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_adc.o(.text.ADC_Init) for ADC_Init
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_mcpwm.o(.text.MCPWM_StructInit) for MCPWM_StructInit
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_mcpwm.o(.text.MCPWM_Init) for MCPWM_Init
    hardware_init.o(.text.Hardware_init) refers to hardware_init.o(.text.GPIO_init) for GPIO_init
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_opa.o(.text.OPA_StructInit) for OPA_StructInit
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_opa.o(.text.OPA_Init) for OPA_Init
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_uart.o(.text.UART_StructInit) for UART_StructInit
    hardware_init.o(.text.Hardware_init) refers to lks32mc08x_uart.o(.text.UART_Init) for UART_Init
    hardware_init.o(.ARM.exidx.text.Hardware_init) refers to hardware_init.o(.text.Hardware_init) for [Anonymous Symbol]
    hardware_init.o(.text.ADC_init) refers to lks32mc08x_adc.o(.text.ADC_StructInit) for ADC_StructInit
    hardware_init.o(.text.ADC_init) refers to lks32mc08x_adc.o(.text.ADC_Init) for ADC_Init
    hardware_init.o(.ARM.exidx.text.ADC_init) refers to hardware_init.o(.text.ADC_init) for [Anonymous Symbol]
    hardware_init.o(.text.MCPWM_init) refers to lks32mc08x_mcpwm.o(.text.MCPWM_StructInit) for MCPWM_StructInit
    hardware_init.o(.text.MCPWM_init) refers to lks32mc08x_mcpwm.o(.text.MCPWM_Init) for MCPWM_Init
    hardware_init.o(.ARM.exidx.text.MCPWM_init) refers to hardware_init.o(.text.MCPWM_init) for [Anonymous Symbol]
    hardware_init.o(.text.GPIO_init) refers to lks32mc08x_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    hardware_init.o(.text.GPIO_init) refers to lks32mc08x_gpio.o(.text.GPIO_Init) for GPIO_Init
    hardware_init.o(.text.GPIO_init) refers to lks32mc08x_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hardware_init.o(.text.GPIO_init) refers to lks32mc08x_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    hardware_init.o(.ARM.exidx.text.GPIO_init) refers to hardware_init.o(.text.GPIO_init) for [Anonymous Symbol]
    hardware_init.o(.text.PGA_init) refers to lks32mc08x_opa.o(.text.OPA_StructInit) for OPA_StructInit
    hardware_init.o(.text.PGA_init) refers to lks32mc08x_opa.o(.text.OPA_Init) for OPA_Init
    hardware_init.o(.ARM.exidx.text.PGA_init) refers to hardware_init.o(.text.PGA_init) for [Anonymous Symbol]
    hardware_init.o(.text.UART_init) refers to lks32mc08x_uart.o(.text.UART_StructInit) for UART_StructInit
    hardware_init.o(.text.UART_init) refers to lks32mc08x_uart.o(.text.UART_Init) for UART_Init
    hardware_init.o(.ARM.exidx.text.UART_init) refers to hardware_init.o(.text.UART_init) for [Anonymous Symbol]
    hardware_init.o(.ARM.exidx.text.SoftDelay) refers to hardware_init.o(.text.SoftDelay) for [Anonymous Symbol]
    hardware_init.o(.ARM.exidx.text.SystemInit) refers to hardware_init.o(.text.SystemInit) for [Anonymous Symbol]
    hardware_init.o(.ARM.exidx.text.ADC_NormalModeCFG) refers to hardware_init.o(.text.ADC_NormalModeCFG) for [Anonymous Symbol]
    hardware_init.o(.ARM.exidx.text.MCPWM0_RegUpdate) refers to hardware_init.o(.text.MCPWM0_RegUpdate) for [Anonymous Symbol]
    hardware_init.o(.text.fputc) refers to lks32mc08x_uart.o(.text.UART_SendData) for UART_SendData
    hardware_init.o(.ARM.exidx.text.fputc) refers to hardware_init.o(.text.fputc) for [Anonymous Symbol]
    sys_init.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    sys_init.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    sys_init.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    sys_init.o(.text.sys_init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    sys_init.o(.text.sys_init) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    sys_init.o(.text.sys_init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    sys_init.o(.text.sys_init) refers to foc_drive.o(.text.FOC_InitstruParama) for FOC_InitstruParama
    sys_init.o(.text.sys_init) refers to global_variable.o(.bss.struFOC_CtrProc) for struFOC_CtrProc
    sys_init.o(.ARM.exidx.text.sys_init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    sys_init.o(.ARM.exidx.text.sys_init) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    sys_init.o(.ARM.exidx.text.sys_init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    sys_init.o(.ARM.exidx.text.sys_init) refers to sys_init.o(.text.sys_init) for [Anonymous Symbol]
    sys_init.o(.text.currentOffsetRead) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    sys_init.o(.text.currentOffsetRead) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    sys_init.o(.text.currentOffsetRead) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    sys_init.o(.text.currentOffsetRead) refers to noretval__2printf.o(.text) for __2printf
    sys_init.o(.text.currentOffsetRead) refers to global_variable.o(.bss.struFOC_CtrProc) for struFOC_CtrProc
    sys_init.o(.ARM.exidx.text.currentOffsetRead) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    sys_init.o(.ARM.exidx.text.currentOffsetRead) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    sys_init.o(.ARM.exidx.text.currentOffsetRead) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    sys_init.o(.ARM.exidx.text.currentOffsetRead) refers to sys_init.o(.text.currentOffsetRead) for [Anonymous Symbol]
    task_scheduler.o(.text.Sys_State_Machine) refers to lks32mc08x_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    task_scheduler.o(.text.Sys_State_Machine) refers to lks32mc08x_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    task_scheduler.o(.text.Sys_State_Machine) refers to foc_drive.o(.text.MCL_Init) for MCL_Init
    task_scheduler.o(.text.Sys_State_Machine) refers to lks32mc08x_mcpwm.o(.text.PWMOutputs) for PWMOutputs
    task_scheduler.o(.text.Sys_State_Machine) refers to task_scheduler.o(.text.Sys_State_Run) for Sys_State_Run
    task_scheduler.o(.ARM.exidx.text.Sys_State_Machine) refers to task_scheduler.o(.text.Sys_State_Machine) for [Anonymous Symbol]
    task_scheduler.o(.text.Sys_State_Run) refers to lks32mc08x_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    task_scheduler.o(.text.Sys_State_Run) refers to pid_regulators.o(.text.HL_PI_AntiDump) for HL_PI_AntiDump
    task_scheduler.o(.ARM.exidx.text.Sys_State_Run) refers to task_scheduler.o(.text.Sys_State_Run) for [Anonymous Symbol]
    task_scheduler.o(.text.StopMotorImmdly) refers to lks32mc08x_mcpwm.o(.text.PWMOutputs) for PWMOutputs
    task_scheduler.o(.ARM.exidx.text.StopMotorImmdly) refers to task_scheduler.o(.text.StopMotorImmdly) for [Anonymous Symbol]
    task_scheduler.o(.ARM.exidx.text.Curr_rc_fir) refers to task_scheduler.o(.text.Curr_rc_fir) for [Anonymous Symbol]
    interrupt.o(.text.ADC0_IRQHandler) refers to foc_drive.o(.text.FOC_Model) for FOC_Model
    interrupt.o(.text.ADC0_IRQHandler) refers to global_variable.o(.bss.struFOC_CtrProc) for struFOC_CtrProc
    interrupt.o(.ARM.exidx.text.ADC0_IRQHandler) refers to interrupt.o(.text.ADC0_IRQHandler) for [Anonymous Symbol]
    interrupt.o(.text.PendSV_Handler) refers to task_scheduler.o(.text.Sys_State_Machine) for Sys_State_Machine
    interrupt.o(.text.PendSV_Handler) refers to key.o(.text.Key_in) for Key_in
    interrupt.o(.text.PendSV_Handler) refers to global_variable.o(.bss.struFOC_CtrProc) for struFOC_CtrProc
    interrupt.o(.ARM.exidx.text.PendSV_Handler) refers to interrupt.o(.text.PendSV_Handler) for [Anonymous Symbol]
    key.o(.ARM.exidx.text.Key_in) refers to key.o(.text.Key_in) for [Anonymous Symbol]
    smo.o(.ARM.exidx.text.SMO_init) refers to smo.o(.text.SMO_init) for [Anonymous Symbol]
    smo.o(.text.SMO_clear) refers to rt_memclr.o(.text) for __aeabi_memclr4
    smo.o(.ARM.exidx.text.SMO_clear) refers to smo.o(.text.SMO_clear) for [Anonymous Symbol]
    smo.o(.text.SMO_CalcElAngle) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_arctan) for lks08x_dsp_arctan
    smo.o(.ARM.exidx.text.SMO_CalcElAngle) refers to smo.o(.text.SMO_CalcElAngle) for [Anonymous Symbol]
    foc_drive.o(.text.FOC_InitstruParama) refers to smo.o(.text.SMO_init) for SMO_init
    foc_drive.o(.ARM.exidx.text.FOC_InitstruParama) refers to foc_drive.o(.text.FOC_InitstruParama) for [Anonymous Symbol]
    foc_drive.o(.ARM.exidx.text.get_adc_curr) refers to foc_drive.o(.text.get_adc_curr) for [Anonymous Symbol]
    foc_drive.o(.text.FOC_Model) refers to smo.o(.text.SMO_init) for SMO_init
    foc_drive.o(.text.FOC_Model) refers to sys_init.o(.text.currentOffsetRead) for currentOffsetRead
    foc_drive.o(.text.FOC_Model) refers to clarke_park.o(.text.Clarke) for Clarke
    foc_drive.o(.text.FOC_Model) refers to smo.o(.text.SMO_CalcElAngle) for SMO_CalcElAngle
    foc_drive.o(.text.FOC_Model) refers to clarke_park.o(.text.Trig_Functions) for Trig_Functions
    foc_drive.o(.text.FOC_Model) refers to clarke_park.o(.text.Park) for Park
    foc_drive.o(.text.FOC_Model) refers to pid_regulators.o(.text.HL_PI_AntiDump) for HL_PI_AntiDump
    foc_drive.o(.text.FOC_Model) refers to clarke_park.o(.text.RevPark_Circle_Limitation) for RevPark_Circle_Limitation
    foc_drive.o(.text.FOC_Model) refers to clarke_park.o(.text.Rev_Park) for Rev_Park
    foc_drive.o(.text.FOC_Model) refers to clarke_park.o(.text.SVPWM) for SVPWM
    foc_drive.o(.text.FOC_Model) refers to hardware_init.o(.text.MCPWM0_RegUpdate) for MCPWM0_RegUpdate
    foc_drive.o(.text.FOC_Model) refers to global_variable.o(.bss.struFOC_CtrProc) for struFOC_CtrProc
    foc_drive.o(.ARM.exidx.text.FOC_Model) refers to foc_drive.o(.text.FOC_Model) for [Anonymous Symbol]
    foc_drive.o(.text.MCL_Init) refers to smo.o(.text.SMO_clear) for SMO_clear
    foc_drive.o(.ARM.exidx.text.MCL_Init) refers to foc_drive.o(.text.MCL_Init) for [Anonymous Symbol]
    clarke_park.o(.ARM.exidx.text.Clarke) refers to clarke_park.o(.text.Clarke) for [Anonymous Symbol]
    clarke_park.o(.ARM.exidx.text.Park) refers to clarke_park.o(.text.Park) for [Anonymous Symbol]
    clarke_park.o(.ARM.exidx.text.Rev_Park) refers to clarke_park.o(.text.Rev_Park) for [Anonymous Symbol]
    clarke_park.o(.ARM.exidx.text.SVPWM) refers to clarke_park.o(.text.SVPWM) for [Anonymous Symbol]
    clarke_park.o(.text.Trig_Functions) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos) for lks08x_dsp_sin_cos
    clarke_park.o(.ARM.exidx.text.Trig_Functions) refers to clarke_park.o(.text.Trig_Functions) for [Anonymous Symbol]
    clarke_park.o(.text.RevPark_Circle_Limitation) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt) for lks08x_dsp_sqrt
    clarke_park.o(.ARM.exidx.text.RevPark_Circle_Limitation) refers to clarke_park.o(.text.RevPark_Circle_Limitation) for [Anonymous Symbol]
    pid_regulators.o(.text.HL_PI_AntiDump) refers to llsshr.o(.text) for __aeabi_lasr
    pid_regulators.o(.text.HL_PI_AntiDump) refers to llshl.o(.text) for __aeabi_llsl
    pid_regulators.o(.ARM.exidx.text.HL_PI_AntiDump) refers to pid_regulators.o(.text.HL_PI_AntiDump) for [Anonymous Symbol]
    lks32mc08x_adc.o(.text.ADC_Init) refers to lks32mc08x_sys.o(.text.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    lks32mc08x_adc.o(.text.ADC_Init) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_Init) refers to lks32mc08x_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    lks32mc08x_adc.o(.text.ADC_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_StructInit) refers to lks32mc08x_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_ClearIRQFlag) refers to lks32mc08x_adc.o(.text.ADC_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_GetIRQFlag) refers to lks32mc08x_adc.o(.text.ADC_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_ChannelConfig) refers to lks32mc08x_adc.o(.text.ADC_ChannelConfig) for [Anonymous Symbol]
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_GetConversionValue) refers to lks32mc08x_adc.o(.text.ADC_GetConversionValue) for [Anonymous Symbol]
    lks32mc08x_adc.o(.ARM.exidx.text.ADC_SoftTrgEN) refers to lks32mc08x_adc.o(.text.ADC_SoftTrgEN) for [Anonymous Symbol]
    lks32mc08x_can.o(.text.CAN_Init) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_can.o(.ARM.exidx.text.CAN_Init) refers to lks32mc08x_can.o(.text.CAN_Init) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_StructInit) refers to lks32mc08x_can.o(.text.CAN_StructInit) for [Anonymous Symbol]
    lks32mc08x_can.o(.text.CAN_Sleep) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    lks32mc08x_can.o(.ARM.exidx.text.CAN_Sleep) refers to lks32mc08x_can.o(.text.CAN_Sleep) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_Manual_Awake) refers to lks32mc08x_can.o(.text.CAN_Manual_Awake) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.SFF_ID_Filter) refers to lks32mc08x_can.o(.text.SFF_ID_Filter) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.EFF_ID_Filter) refers to lks32mc08x_can.o(.text.EFF_ID_Filter) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.ID1_Filter_Dual) refers to lks32mc08x_can.o(.text.ID1_Filter_Dual) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.ID2_Filter_Dual) refers to lks32mc08x_can.o(.text.ID2_Filter_Dual) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.My_CAN_Send_Msg) refers to lks32mc08x_can.o(.text.My_CAN_Send_Msg) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_Receive_Msg) refers to lks32mc08x_can.o(.text.CAN_Receive_Msg) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadState) refers to lks32mc08x_can.o(.text.CAN_ReadState) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadALC) refers to lks32mc08x_can.o(.text.CAN_ReadALC) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadRXERRCNT) refers to lks32mc08x_can.o(.text.CAN_ReadRXERRCNT) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadTXERRCNT) refers to lks32mc08x_can.o(.text.CAN_ReadTXERRCNT) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_ReceFramInfor) refers to lks32mc08x_can.o(.text.CAN_ReceFramInfor) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadErrorCode) refers to lks32mc08x_can.o(.text.CAN_ReadErrorCode) for [Anonymous Symbol]
    lks32mc08x_can.o(.ARM.exidx.text.CAN_GetIRQFlag) refers to lks32mc08x_can.o(.text.CAN_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_cmp.o(.text.CMP_Init) refers to lks32mc08x_sys.o(.text.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    lks32mc08x_cmp.o(.ARM.exidx.text.CMP_Init) refers to lks32mc08x_cmp.o(.text.CMP_Init) for [Anonymous Symbol]
    lks32mc08x_cmp.o(.text.CMP_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr
    lks32mc08x_cmp.o(.ARM.exidx.text.CMP_StructInit) refers to lks32mc08x_cmp.o(.text.CMP_StructInit) for [Anonymous Symbol]
    lks32mc08x_cmp.o(.ARM.exidx.text.CMP_GetIRQFlag) refers to lks32mc08x_cmp.o(.text.CMP_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_cmp.o(.ARM.exidx.text.CMP_ClearIRQFlag) refers to lks32mc08x_cmp.o(.text.CMP_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_dac.o(.ARM.exidx.text.DAC_StructInit) refers to lks32mc08x_dac.o(.text.DAC_StructInit) for [Anonymous Symbol]
    lks32mc08x_dac.o(.text.DAC_Init) refers to lks32mc08x_sys.o(.text.SYS_AnalogModuleClockCmd) for SYS_AnalogModuleClockCmd
    lks32mc08x_dac.o(.text.DAC_Init) refers to lks32mc08x_nvr.o(i.Read_Trim) for Read_Trim
    lks32mc08x_dac.o(.ARM.exidx.text.DAC_Init) refers to lks32mc08x_dac.o(.text.DAC_Init) for [Anonymous Symbol]
    lks32mc08x_dac.o(.ARM.exidx.text.DAC_OutputValue) refers to lks32mc08x_dac.o(.text.DAC_OutputValue) for [Anonymous Symbol]
    lks32mc08x_dac.o(.ARM.exidx.text.DAC_OutputVoltage) refers to lks32mc08x_dac.o(.text.DAC_OutputVoltage) for [Anonymous Symbol]
    lks32mc08x_dma.o(.ARM.exidx.text.DMA_StructInit) refers to lks32mc08x_dma.o(.text.DMA_StructInit) for [Anonymous Symbol]
    lks32mc08x_dma.o(.ARM.exidx.text.DMA_Init) refers to lks32mc08x_dma.o(.text.DMA_Init) for [Anonymous Symbol]
    lks32mc08x_dma.o(.ARM.exidx.text.DMA_CHx_EN) refers to lks32mc08x_dma.o(.text.DMA_CHx_EN) for [Anonymous Symbol]
    lks32mc08x_dma.o(.ARM.exidx.text.DMA_GetIRQFlag) refers to lks32mc08x_dma.o(.text.DMA_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_dma.o(.ARM.exidx.text.DMA_ClearIRQFlag) refers to lks32mc08x_dma.o(.text.DMA_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_sin_cos) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_sin) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_sin) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_sin) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_sin) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_cos) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_cos) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_cos) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_cos) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_rms) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_rms) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_rms) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_rms) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_arctan) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_arctan) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_arctan) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_arctan) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_div) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_div) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_div) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_div) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_mod) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_mod) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_mod) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_mod) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt) refers to lks32mc08x_dsp.o(.bss.dsp_flg) for [Anonymous Symbol]
    lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_sqrt) refers to lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt) for [Anonymous Symbol]
    lks32mc08x_exti.o(.ARM.exidx.text.EXTI_Trigger_Config) refers to lks32mc08x_exti.o(.text.EXTI_Trigger_Config) for [Anonymous Symbol]
    lks32mc08x_exti.o(.ARM.exidx.text.EXTI_GetIRQFlag) refers to lks32mc08x_exti.o(.text.EXTI_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_exti.o(.ARM.exidx.text.EXTI_ClearIRQFlag) refers to lks32mc08x_exti.o(.text.EXTI_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_flash.o(.text.EraseSector) refers to lks32mc08x_flash.o(.bss.erase_flag) for erase_flag
    lks32mc08x_flash.o(.ARM.exidx.text.EraseSector) refers to lks32mc08x_flash.o(.text.EraseSector) for [Anonymous Symbol]
    lks32mc08x_flash.o(.text.ProgramPage) refers to lks32mc08x_flash.o(.bss.progm_flag) for progm_flag
    lks32mc08x_flash.o(.ARM.exidx.text.ProgramPage) refers to lks32mc08x_flash.o(.text.ProgramPage) for [Anonymous Symbol]
    lks32mc08x_flash.o(.text.Read_Flash) refers to lks32mc08x_nvr.o(i.Read_NVR) for Read_NVR
    lks32mc08x_flash.o(.ARM.exidx.text.Read_Flash) refers to lks32mc08x_flash.o(.text.Read_Flash) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_Init) refers to lks32mc08x_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to lks32mc08x_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to lks32mc08x_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to lks32mc08x_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to lks32mc08x_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to lks32mc08x_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to lks32mc08x_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to lks32mc08x_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to lks32mc08x_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_Write) refers to lks32mc08x_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_LockRegister) refers to lks32mc08x_gpio.o(.text.GPIO_LockRegister) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_UnlockRegister) refers to lks32mc08x_gpio.o(.text.GPIO_UnlockRegister) for [Anonymous Symbol]
    lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig) refers to lks32mc08x_gpio.o(.text.GPIO_PinAFConfig) for [Anonymous Symbol]
    lks32mc08x_hall.o(.text.HALL_Init) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_Init) refers to lks32mc08x_hall.o(.text.HALL_Init) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_StructInit) refers to lks32mc08x_hall.o(.text.HALL_StructInit) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetFilterValue) refers to lks32mc08x_hall.o(.text.HALL_GetFilterValue) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetCaptureValue) refers to lks32mc08x_hall.o(.text.HALL_GetCaptureValue) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_WIDCount) refers to lks32mc08x_hall.o(.text.HALL_WIDCount) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetCount) refers to lks32mc08x_hall.o(.text.HALL_GetCount) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetIRQFlag) refers to lks32mc08x_hall.o(.text.HALL_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_hall.o(.ARM.exidx.text.HALL_ClearIRQFlag) refers to lks32mc08x_hall.o(.text.HALL_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.text.I2C_Init) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_i2c.o(.text.I2C_Init) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for SYS_SoftResetModule
    lks32mc08x_i2c.o(.text.I2C_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    lks32mc08x_i2c.o(.text.I2C_Init) refers to lks32mc08x_dma.o(.text.DMA_Init) for DMA_Init
    lks32mc08x_i2c.o(.ARM.exidx.text.I2C_Init) refers to lks32mc08x_i2c.o(.text.I2C_Init) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.text.i2c_dma_init) refers to lks32mc08x_dma.o(.text.DMA_Init) for DMA_Init
    lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_init) refers to lks32mc08x_i2c.o(.text.i2c_dma_init) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.ARM.exidx.text.I2C_StructInit) refers to lks32mc08x_i2c.o(.text.I2C_StructInit) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.ARM.exidx.text.I2C_SendData) refers to lks32mc08x_i2c.o(.text.I2C_SendData) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.ARM.exidx.text.I2C_ReadData) refers to lks32mc08x_i2c.o(.text.I2C_ReadData) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.text.i2c_dma_state_over) refers to lks32mc08x_i2c.o(.bss.i2c_dma_state) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_state_over) refers to lks32mc08x_i2c.o(.text.i2c_dma_state_over) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.text.i2c_dma_tx) refers to lks32mc08x_i2c.o(.bss.i2c_dma_state) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_tx) refers to lks32mc08x_i2c.o(.text.i2c_dma_tx) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.text.i2c_dma_rx) refers to lks32mc08x_i2c.o(.bss.i2c_dma_state) for [Anonymous Symbol]
    lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_rx) refers to lks32mc08x_i2c.o(.text.i2c_dma_rx) for [Anonymous Symbol]
    lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_Init) refers to lks32mc08x_iwdg.o(.text.IWDG_Init) for [Anonymous Symbol]
    lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_StrutInit) refers to lks32mc08x_iwdg.o(.text.IWDG_StrutInit) for [Anonymous Symbol]
    lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_DISABLE) refers to lks32mc08x_iwdg.o(.text.IWDG_DISABLE) for [Anonymous Symbol]
    lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_ENABLE) refers to lks32mc08x_iwdg.o(.text.IWDG_ENABLE) for [Anonymous Symbol]
    lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_Feed) refers to lks32mc08x_iwdg.o(.text.IWDG_Feed) for [Anonymous Symbol]
    lks32mc08x_mcpwm.o(.ARM.exidx.text.PWMOutputs) refers to lks32mc08x_mcpwm.o(.text.PWMOutputs) for [Anonymous Symbol]
    lks32mc08x_mcpwm.o(.text.MCPWM_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr
    lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_StructInit) refers to lks32mc08x_mcpwm.o(.text.MCPWM_StructInit) for [Anonymous Symbol]
    lks32mc08x_mcpwm.o(.text.MCPWM_Init) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_Init) refers to lks32mc08x_mcpwm.o(.text.MCPWM_Init) for [Anonymous Symbol]
    lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_GetIRQFlag) refers to lks32mc08x_mcpwm.o(.text.MCPWM_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_ClearIRQFlag) refers to lks32mc08x_mcpwm.o(.text.MCPWM_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_opa.o(.ARM.exidx.text.OPA_Init) refers to lks32mc08x_opa.o(.text.OPA_Init) for [Anonymous Symbol]
    lks32mc08x_opa.o(.ARM.exidx.text.OPA_StructInit) refers to lks32mc08x_opa.o(.text.OPA_StructInit) for [Anonymous Symbol]
    lks32mc08x_opa.o(.ARM.exidx.text.OPA_OUT) refers to lks32mc08x_opa.o(.text.OPA_OUT) for [Anonymous Symbol]
    lks32mc08x_spi.o(.text.SPI_Init) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_spi.o(.ARM.exidx.text.SPI_Init) refers to lks32mc08x_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    lks32mc08x_spi.o(.text.SPI_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr
    lks32mc08x_spi.o(.ARM.exidx.text.SPI_StructInit) refers to lks32mc08x_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    lks32mc08x_spi.o(.ARM.exidx.text.SPI_SendData) refers to lks32mc08x_spi.o(.text.SPI_SendData) for [Anonymous Symbol]
    lks32mc08x_spi.o(.ARM.exidx.text.SPI_ReadData) refers to lks32mc08x_spi.o(.text.SPI_ReadData) for [Anonymous Symbol]
    lks32mc08x_spi.o(.ARM.exidx.text.SPI_GetIRQFlag) refers to lks32mc08x_spi.o(.text.SPI_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_spi.o(.ARM.exidx.text.SPI_ClearIRQFlag) refers to lks32mc08x_spi.o(.text.SPI_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_Init) refers to lks32mc08x_sys.o(.text.SYS_Init) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_StructInit) refers to lks32mc08x_sys.o(.text.SYS_StructInit) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_ClearRst) refers to lks32mc08x_sys.o(.text.SYS_ClearRst) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_GetRstSource) refers to lks32mc08x_sys.o(.text.SYS_GetRstSource) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_FallSleep) refers to lks32mc08x_sys.o(.text.SYS_FallSleep) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_SetWakeInterval) refers to lks32mc08x_sys.o(.text.SYS_SetWakeInterval) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SetWakeIO) refers to lks32mc08x_sys.o(.text.SetWakeIO) for [Anonymous Symbol]
    lks32mc08x_sys.o(.text.Switch2PLL) refers to lks32mc08x_sys.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.Switch2PLL) refers to lks32mc08x_sys.o(.text.Switch2PLL) for [Anonymous Symbol]
    lks32mc08x_sys.o(.text.Switch2HRC) refers to lks32mc08x_sys.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.Switch2HRC) refers to lks32mc08x_sys.o(.text.Switch2HRC) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_WatchDogCmd) refers to lks32mc08x_sys.o(.text.SYS_WatchDogCmd) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_EnablePORFilter) refers to lks32mc08x_sys.o(.text.SYS_EnablePORFilter) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_FeedDog) refers to lks32mc08x_sys.o(.text.SYS_FeedDog) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_ModuleClockCmd) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_AnalogModuleClockCmd) refers to lks32mc08x_sys.o(.text.SYS_AnalogModuleClockCmd) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.SYS_SoftResetModule) refers to lks32mc08x_sys.o(.text.SYS_SoftResetModule) for [Anonymous Symbol]
    lks32mc08x_sys.o(.ARM.exidx.text.DSP_Init) refers to lks32mc08x_sys.o(.text.DSP_Init) for [Anonymous Symbol]
    lks32mc08x_tim.o(.text.TIM_TimerInit) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_TimerInit) refers to lks32mc08x_tim.o(.text.TIM_TimerInit) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_TimerStrutInit) refers to lks32mc08x_tim.o(.text.TIM_TimerStrutInit) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_TimerCmd) refers to lks32mc08x_tim.o(.text.TIM_TimerCmd) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_GetIRQFlag) refers to lks32mc08x_tim.o(.text.TIM_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_ClearIRQFlag) refers to lks32mc08x_tim.o(.text.TIM_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_Timer_GetCount) refers to lks32mc08x_tim.o(.text.TIM_Timer_GetCount) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_Timer_GetCMPT0) refers to lks32mc08x_tim.o(.text.TIM_Timer_GetCMPT0) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_Timer_GetCMPT1) refers to lks32mc08x_tim.o(.text.TIM_Timer_GetCMPT1) for [Anonymous Symbol]
    lks32mc08x_tim.o(.text.TIM_ECDInit) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECDInit) refers to lks32mc08x_tim.o(.text.TIM_ECDInit) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECDStructInit) refers to lks32mc08x_tim.o(.text.TIM_ECDStructInit) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECDCmd) refers to lks32mc08x_tim.o(.text.TIM_ECDCmd) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECD_GetCount) refers to lks32mc08x_tim.o(.text.TIM_ECD_GetCount) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.ECD_GetIRQFlag) refers to lks32mc08x_tim.o(.text.ECD_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_tim.o(.ARM.exidx.text.ECD_ClearIRQFlag) refers to lks32mc08x_tim.o(.text.ECD_ClearIRQFlag) for [Anonymous Symbol]
    lks32mc08x_uart.o(.text.UART_Init) refers to lks32mc08x_sys.o(.text.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_uart.o(.text.UART_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    lks32mc08x_uart.o(.ARM.exidx.text.UART_Init) refers to lks32mc08x_uart.o(.text.UART_Init) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_StructInit) refers to lks32mc08x_uart.o(.text.UART_StructInit) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_SendData) refers to lks32mc08x_uart.o(.text.UART_SendData) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_ReadData) refers to lks32mc08x_uart.o(.text.UART_ReadData) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_SendAddr_485) refers to lks32mc08x_uart.o(.text.UART_SendAddr_485) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_SendData_485) refers to lks32mc08x_uart.o(.text.UART_SendData_485) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_GetIRQFlag) refers to lks32mc08x_uart.o(.text.UART_GetIRQFlag) for [Anonymous Symbol]
    lks32mc08x_uart.o(.ARM.exidx.text.UART_ClearIRQFlag) refers to lks32mc08x_uart.o(.text.UART_ClearIRQFlag) for [Anonymous Symbol]
    startup_lks32mc08x.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lks32mc08x.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lks32mc08x.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(.text) for Reset_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(.text.PendSV_Handler) for PendSV_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(.text.ADC0_IRQHandler) for ADC0_IRQHandler
    startup_lks32mc08x.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lks32mc08x.o(.text) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(.text) refers to hardware_init.o(.text.SystemInit) for SystemInit
    startup_lks32mc08x.o(.text) refers to __main.o(!!!main) for __main
    startup_lks32mc08x.o(.text) refers to startup_lks32mc08x.o(HEAP) for Heap_Mem
    __2printf.o(.text) refers to _printf_char_file.o(.text) for _printf_char_file
    __2printf.o(.text) refers to hardware_init.o(.bss.__stdout) for __stdout
    noretval__2printf.o(.text) refers to _printf_char_file.o(.text) for _printf_char_file
    noretval__2printf.o(.text) refers to hardware_init.o(.bss.__stdout) for __stdout
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_dec.o(.text) refers to rtudiv10.o(.text) for __rt_udiv10
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    _printf_char_file.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file.o(.text) refers to ferror.o(.text) for ferror
    _printf_char_file.o(.text) refers to hardware_init.o(.text.fputc) for fputc
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    _printf_char_common.o(.text) refers to __printf.o(.text) for __printf
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_lks32mc08x.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing hardware_init.o(.text), (0 bytes).
    Removing hardware_init.o(.ARM.exidx.text.Hardware_init), (8 bytes).
    Removing hardware_init.o(.text.ADC_init), (92 bytes).
    Removing hardware_init.o(.ARM.exidx.text.ADC_init), (8 bytes).
    Removing hardware_init.o(.text.MCPWM_init), (144 bytes).
    Removing hardware_init.o(.ARM.exidx.text.MCPWM_init), (8 bytes).
    Removing hardware_init.o(.ARM.exidx.text.GPIO_init), (8 bytes).
    Removing hardware_init.o(.text.PGA_init), (56 bytes).
    Removing hardware_init.o(.ARM.exidx.text.PGA_init), (8 bytes).
    Removing hardware_init.o(.text.UART_init), (44 bytes).
    Removing hardware_init.o(.ARM.exidx.text.UART_init), (8 bytes).
    Removing hardware_init.o(.text.SoftDelay), (72 bytes).
    Removing hardware_init.o(.ARM.exidx.text.SoftDelay), (8 bytes).
    Removing hardware_init.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing hardware_init.o(.text.ADC_NormalModeCFG), (28 bytes).
    Removing hardware_init.o(.ARM.exidx.text.ADC_NormalModeCFG), (8 bytes).
    Removing hardware_init.o(.ARM.exidx.text.MCPWM0_RegUpdate), (8 bytes).
    Removing hardware_init.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing sys_init.o(.text), (0 bytes).
    Removing sys_init.o(.ARM.exidx.text.sys_init), (8 bytes).
    Removing sys_init.o(.ARM.exidx.text.currentOffsetRead), (8 bytes).
    Removing task_scheduler.o(.text), (0 bytes).
    Removing task_scheduler.o(.ARM.exidx.text.Sys_State_Machine), (8 bytes).
    Removing task_scheduler.o(.ARM.exidx.text.Sys_State_Run), (8 bytes).
    Removing task_scheduler.o(.text.StopMotorImmdly), (26 bytes).
    Removing task_scheduler.o(.ARM.exidx.text.StopMotorImmdly), (8 bytes).
    Removing task_scheduler.o(.text.Curr_rc_fir), (60 bytes).
    Removing task_scheduler.o(.ARM.exidx.text.Curr_rc_fir), (8 bytes).
    Removing interrupt.o(.text), (0 bytes).
    Removing interrupt.o(.ARM.exidx.text.ADC0_IRQHandler), (8 bytes).
    Removing interrupt.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing global_variable.o(.text), (0 bytes).
    Removing key.o(.text), (0 bytes).
    Removing key.o(.ARM.exidx.text.Key_in), (8 bytes).
    Removing smo.o(.text), (0 bytes).
    Removing smo.o(.ARM.exidx.text.SMO_init), (8 bytes).
    Removing smo.o(.ARM.exidx.text.SMO_clear), (8 bytes).
    Removing smo.o(.ARM.exidx.text.SMO_CalcElAngle), (8 bytes).
    Removing foc_drive.o(.text), (0 bytes).
    Removing foc_drive.o(.ARM.exidx.text.FOC_InitstruParama), (8 bytes).
    Removing foc_drive.o(.text.get_adc_curr), (52 bytes).
    Removing foc_drive.o(.ARM.exidx.text.get_adc_curr), (8 bytes).
    Removing foc_drive.o(.ARM.exidx.text.FOC_Model), (8 bytes).
    Removing foc_drive.o(.ARM.exidx.text.MCL_Init), (8 bytes).
    Removing clarke_park.o(.text), (0 bytes).
    Removing clarke_park.o(.ARM.exidx.text.Clarke), (8 bytes).
    Removing clarke_park.o(.ARM.exidx.text.Park), (8 bytes).
    Removing clarke_park.o(.ARM.exidx.text.Rev_Park), (8 bytes).
    Removing clarke_park.o(.ARM.exidx.text.SVPWM), (8 bytes).
    Removing clarke_park.o(.ARM.exidx.text.Trig_Functions), (8 bytes).
    Removing clarke_park.o(.ARM.exidx.text.RevPark_Circle_Limitation), (8 bytes).
    Removing pid_regulators.o(.text), (0 bytes).
    Removing pid_regulators.o(.ARM.exidx.text.HL_PI_AntiDump), (8 bytes).
    Removing lks32mc08x_adc.o(.text), (0 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing lks32mc08x_adc.o(.text.ADC_ClearIRQFlag), (6 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_adc.o(.text.ADC_GetIRQFlag), (22 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_adc.o(.text.ADC_ChannelConfig), (28 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_ChannelConfig), (8 bytes).
    Removing lks32mc08x_adc.o(.text.ADC_GetConversionValue), (248 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_GetConversionValue), (8 bytes).
    Removing lks32mc08x_adc.o(.text.ADC_SoftTrgEN), (16 bytes).
    Removing lks32mc08x_adc.o(.ARM.exidx.text.ADC_SoftTrgEN), (8 bytes).
    Removing lks32mc08x_can.o(.text), (0 bytes).
    Removing lks32mc08x_can.o(.text.CAN_Init), (68 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_Init), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_StructInit), (24 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_StructInit), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_Sleep), (148 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_Sleep), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_Manual_Awake), (24 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_Manual_Awake), (8 bytes).
    Removing lks32mc08x_can.o(.text.SFF_ID_Filter), (88 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.SFF_ID_Filter), (8 bytes).
    Removing lks32mc08x_can.o(.text.EFF_ID_Filter), (96 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.EFF_ID_Filter), (8 bytes).
    Removing lks32mc08x_can.o(.text.ID1_Filter_Dual), (148 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.ID1_Filter_Dual), (8 bytes).
    Removing lks32mc08x_can.o(.text.ID2_Filter_Dual), (120 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.ID2_Filter_Dual), (8 bytes).
    Removing lks32mc08x_can.o(.text.My_CAN_Send_Msg), (316 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.My_CAN_Send_Msg), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_Receive_Msg), (184 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_Receive_Msg), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_ReadState), (8 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadState), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_ReadALC), (12 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadALC), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_ReadRXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadRXERRCNT), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_ReadTXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadTXERRCNT), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_ReceFramInfor), (16 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_ReceFramInfor), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_ReadErrorCode), (36 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_ReadErrorCode), (8 bytes).
    Removing lks32mc08x_can.o(.text.CAN_GetIRQFlag), (12 bytes).
    Removing lks32mc08x_can.o(.ARM.exidx.text.CAN_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_cmp.o(.text), (0 bytes).
    Removing lks32mc08x_cmp.o(.text.CMP_Init), (268 bytes).
    Removing lks32mc08x_cmp.o(.ARM.exidx.text.CMP_Init), (8 bytes).
    Removing lks32mc08x_cmp.o(.text.CMP_StructInit), (10 bytes).
    Removing lks32mc08x_cmp.o(.ARM.exidx.text.CMP_StructInit), (8 bytes).
    Removing lks32mc08x_cmp.o(.text.CMP_GetIRQFlag), (40 bytes).
    Removing lks32mc08x_cmp.o(.ARM.exidx.text.CMP_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_cmp.o(.text.CMP_ClearIRQFlag), (24 bytes).
    Removing lks32mc08x_cmp.o(.ARM.exidx.text.CMP_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_dac.o(.text), (0 bytes).
    Removing lks32mc08x_dac.o(.text.DAC_StructInit), (8 bytes).
    Removing lks32mc08x_dac.o(.ARM.exidx.text.DAC_StructInit), (8 bytes).
    Removing lks32mc08x_dac.o(.text.DAC_Init), (140 bytes).
    Removing lks32mc08x_dac.o(.ARM.exidx.text.DAC_Init), (8 bytes).
    Removing lks32mc08x_dac.o(.text.DAC_OutputValue), (44 bytes).
    Removing lks32mc08x_dac.o(.ARM.exidx.text.DAC_OutputValue), (8 bytes).
    Removing lks32mc08x_dac.o(.text.DAC_OutputVoltage), (112 bytes).
    Removing lks32mc08x_dac.o(.ARM.exidx.text.DAC_OutputVoltage), (8 bytes).
    Removing lks32mc08x_dma.o(.text), (0 bytes).
    Removing lks32mc08x_dma.o(.text.DMA_StructInit), (14 bytes).
    Removing lks32mc08x_dma.o(.ARM.exidx.text.DMA_StructInit), (8 bytes).
    Removing lks32mc08x_dma.o(.text.DMA_Init), (84 bytes).
    Removing lks32mc08x_dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing lks32mc08x_dma.o(.text.DMA_CHx_EN), (16 bytes).
    Removing lks32mc08x_dma.o(.ARM.exidx.text.DMA_CHx_EN), (8 bytes).
    Removing lks32mc08x_dma.o(.text.DMA_GetIRQFlag), (52 bytes).
    Removing lks32mc08x_dma.o(.ARM.exidx.text.DMA_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_dma.o(.text.DMA_ClearIRQFlag), (12 bytes).
    Removing lks32mc08x_dma.o(.ARM.exidx.text.DMA_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_dsp.o(.text), (0 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_sin_cos), (8 bytes).
    Removing lks32mc08x_dsp.o(.text.lks08x_dsp_sin), (52 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_sin), (8 bytes).
    Removing lks32mc08x_dsp.o(.text.lks08x_dsp_cos), (52 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_cos), (8 bytes).
    Removing lks32mc08x_dsp.o(.text.lks08x_dsp_rms), (104 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_rms), (8 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_arctan), (8 bytes).
    Removing lks32mc08x_dsp.o(.text.lks08x_dsp_div), (152 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_div), (8 bytes).
    Removing lks32mc08x_dsp.o(.text.lks08x_dsp_mod), (92 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_mod), (8 bytes).
    Removing lks32mc08x_dsp.o(.ARM.exidx.text.lks08x_dsp_sqrt), (8 bytes).
    Removing lks32mc08x_exti.o(.text), (0 bytes).
    Removing lks32mc08x_exti.o(.text.EXTI_Trigger_Config), (56 bytes).
    Removing lks32mc08x_exti.o(.ARM.exidx.text.EXTI_Trigger_Config), (8 bytes).
    Removing lks32mc08x_exti.o(.text.EXTI_GetIRQFlag), (36 bytes).
    Removing lks32mc08x_exti.o(.ARM.exidx.text.EXTI_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_exti.o(.text.EXTI_ClearIRQFlag), (28 bytes).
    Removing lks32mc08x_exti.o(.ARM.exidx.text.EXTI_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_flash.o(.text), (0 bytes).
    Removing lks32mc08x_flash.o(.text.EraseSector), (116 bytes).
    Removing lks32mc08x_flash.o(.ARM.exidx.text.EraseSector), (8 bytes).
    Removing lks32mc08x_flash.o(.text.ProgramPage), (248 bytes).
    Removing lks32mc08x_flash.o(.ARM.exidx.text.ProgramPage), (8 bytes).
    Removing lks32mc08x_flash.o(.text.Read_Flash), (48 bytes).
    Removing lks32mc08x_flash.o(.ARM.exidx.text.Read_Flash), (8 bytes).
    Removing lks32mc08x_flash.o(.bss.erase_flag), (4 bytes).
    Removing lks32mc08x_flash.o(.bss.progm_flag), (4 bytes).
    Removing lks32mc08x_gpio.o(.text), (0 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_ReadInputDataBit), (10 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_ReadInputData), (4 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_ReadOutputDataBit), (10 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_ReadOutputData), (4 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_WriteBit), (20 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_Write), (8 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_LockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_LockRegister), (8 bytes).
    Removing lks32mc08x_gpio.o(.text.GPIO_UnlockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_UnlockRegister), (8 bytes).
    Removing lks32mc08x_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig), (8 bytes).
    Removing lks32mc08x_hall.o(.text), (0 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_Init), (68 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_Init), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_StructInit), (20 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_StructInit), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_GetFilterValue), (16 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetFilterValue), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_GetCaptureValue), (16 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetCaptureValue), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_WIDCount), (12 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_WIDCount), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_GetCount), (12 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetCount), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_GetIRQFlag), (12 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_hall.o(.text.HALL_ClearIRQFlag), (12 bytes).
    Removing lks32mc08x_hall.o(.ARM.exidx.text.HALL_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_i2c.o(.text), (0 bytes).
    Removing lks32mc08x_i2c.o(.text.I2C_Init), (184 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.i2c_dma_init), (56 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_init), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.I2C_StructInit), (20 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.I2C_StructInit), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.I2C_SendData), (4 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.I2C_ReadData), (6 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.I2C_ReadData), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.i2c_dma_state_over), (12 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_state_over), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.i2c_dma_tx), (588 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_tx), (8 bytes).
    Removing lks32mc08x_i2c.o(.text.i2c_dma_rx), (580 bytes).
    Removing lks32mc08x_i2c.o(.ARM.exidx.text.i2c_dma_rx), (8 bytes).
    Removing lks32mc08x_i2c.o(.bss.i2c_dma_state), (1 bytes).
    Removing lks32mc08x_iwdg.o(.text), (0 bytes).
    Removing lks32mc08x_iwdg.o(.text.IWDG_Init), (64 bytes).
    Removing lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_Init), (8 bytes).
    Removing lks32mc08x_iwdg.o(.text.IWDG_StrutInit), (10 bytes).
    Removing lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_StrutInit), (8 bytes).
    Removing lks32mc08x_iwdg.o(.text.IWDG_DISABLE), (16 bytes).
    Removing lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_DISABLE), (8 bytes).
    Removing lks32mc08x_iwdg.o(.text.IWDG_ENABLE), (16 bytes).
    Removing lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_ENABLE), (8 bytes).
    Removing lks32mc08x_iwdg.o(.text.IWDG_Feed), (32 bytes).
    Removing lks32mc08x_iwdg.o(.ARM.exidx.text.IWDG_Feed), (8 bytes).
    Removing lks32mc08x_mcpwm.o(.text), (0 bytes).
    Removing lks32mc08x_mcpwm.o(.ARM.exidx.text.PWMOutputs), (8 bytes).
    Removing lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_StructInit), (8 bytes).
    Removing lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_Init), (8 bytes).
    Removing lks32mc08x_mcpwm.o(.text.MCPWM_GetIRQFlag), (48 bytes).
    Removing lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_mcpwm.o(.text.MCPWM_ClearIRQFlag), (24 bytes).
    Removing lks32mc08x_mcpwm.o(.ARM.exidx.text.MCPWM_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_opa.o(.text), (0 bytes).
    Removing lks32mc08x_opa.o(.ARM.exidx.text.OPA_Init), (8 bytes).
    Removing lks32mc08x_opa.o(.ARM.exidx.text.OPA_StructInit), (8 bytes).
    Removing lks32mc08x_opa.o(.text.OPA_OUT), (44 bytes).
    Removing lks32mc08x_opa.o(.ARM.exidx.text.OPA_OUT), (8 bytes).
    Removing lks32mc08x_spi.o(.text), (0 bytes).
    Removing lks32mc08x_spi.o(.text.SPI_Init), (100 bytes).
    Removing lks32mc08x_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing lks32mc08x_spi.o(.text.SPI_StructInit), (20 bytes).
    Removing lks32mc08x_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing lks32mc08x_spi.o(.text.SPI_SendData), (4 bytes).
    Removing lks32mc08x_spi.o(.ARM.exidx.text.SPI_SendData), (8 bytes).
    Removing lks32mc08x_spi.o(.text.SPI_ReadData), (6 bytes).
    Removing lks32mc08x_spi.o(.ARM.exidx.text.SPI_ReadData), (8 bytes).
    Removing lks32mc08x_spi.o(.text.SPI_GetIRQFlag), (10 bytes).
    Removing lks32mc08x_spi.o(.ARM.exidx.text.SPI_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_spi.o(.text.SPI_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_spi.o(.ARM.exidx.text.SPI_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_sys.o(.text), (0 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_Init), (88 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_Init), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_StructInit), (22 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_StructInit), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_ClearRst), (16 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_ClearRst), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_GetRstSource), (12 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_GetRstSource), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_FallSleep), (36 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_FallSleep), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_SetWakeInterval), (16 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_SetWakeInterval), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SetWakeIO), (48 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SetWakeIO), (8 bytes).
    Removing lks32mc08x_sys.o(.text.Switch2PLL), (120 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.Switch2PLL), (8 bytes).
    Removing lks32mc08x_sys.o(.text.Switch2HRC), (56 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.Switch2HRC), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_WatchDogCmd), (32 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_WatchDogCmd), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_EnablePORFilter), (16 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_EnablePORFilter), (8 bytes).
    Removing lks32mc08x_sys.o(.text.SYS_FeedDog), (48 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_FeedDog), (8 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_ModuleClockCmd), (8 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_AnalogModuleClockCmd), (8 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.SYS_SoftResetModule), (8 bytes).
    Removing lks32mc08x_sys.o(.ARM.exidx.text.DSP_Init), (8 bytes).
    Removing lks32mc08x_sys.o(.bss..L_MergedGlobals), (12 bytes).
    Removing lks32mc08x_tim.o(.text), (0 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_TimerInit), (252 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_TimerInit), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_TimerStrutInit), (34 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_TimerStrutInit), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_TimerCmd), (140 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_TimerCmd), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_GetIRQFlag), (108 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_ClearIRQFlag), (112 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_Timer_GetCount), (4 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_Timer_GetCount), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_Timer_GetCMPT0), (4 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_Timer_GetCMPT0), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_Timer_GetCMPT1), (4 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_Timer_GetCMPT1), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_ECDInit), (184 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECDInit), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_ECDStructInit), (20 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECDStructInit), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_ECDCmd), (84 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECDCmd), (8 bytes).
    Removing lks32mc08x_tim.o(.text.TIM_ECD_GetCount), (4 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.TIM_ECD_GetCount), (8 bytes).
    Removing lks32mc08x_tim.o(.text.ECD_GetIRQFlag), (52 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.ECD_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_tim.o(.text.ECD_ClearIRQFlag), (40 bytes).
    Removing lks32mc08x_tim.o(.ARM.exidx.text.ECD_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_uart.o(.text), (0 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_Init), (8 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_StructInit), (8 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_SendData), (8 bytes).
    Removing lks32mc08x_uart.o(.text.UART_ReadData), (4 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_ReadData), (8 bytes).
    Removing lks32mc08x_uart.o(.text.UART_SendAddr_485), (162 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_SendAddr_485), (8 bytes).
    Removing lks32mc08x_uart.o(.text.UART_SendData_485), (162 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_SendData_485), (8 bytes).
    Removing lks32mc08x_uart.o(.text.UART_GetIRQFlag), (14 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_GetIRQFlag), (8 bytes).
    Removing lks32mc08x_uart.o(.text.UART_ClearIRQFlag), (4 bytes).
    Removing lks32mc08x_uart.o(.ARM.exidx.text.UART_ClearIRQFlag), (8 bytes).
    Removing lks32mc08x_nvr.o(i.Read_NVR), (52 bytes).

331 unused section(s) (total 9517 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.c                       0x00000000   Number         0  rtudiv10.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.c                       0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/longlong.c                       0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ferror.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ferror_locked.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_NVR.c 0x00000000   Number         0  lks32mc08x_nvr.o ABSOLUTE
    clarke_park.c                            0x00000000   Number         0  clarke_park.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    foc_drive.c                              0x00000000   Number         0  foc_drive.o ABSOLUTE
    global_variable.c                        0x00000000   Number         0  global_variable.o ABSOLUTE
    hardware_init.c                          0x00000000   Number         0  hardware_init.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    key.c                                    0x00000000   Number         0  key.o ABSOLUTE
    lks32MC08x_flash.c                       0x00000000   Number         0  lks32mc08x_flash.o ABSOLUTE
    lks32mc08x_adc.c                         0x00000000   Number         0  lks32mc08x_adc.o ABSOLUTE
    lks32mc08x_can.c                         0x00000000   Number         0  lks32mc08x_can.o ABSOLUTE
    lks32mc08x_cmp.c                         0x00000000   Number         0  lks32mc08x_cmp.o ABSOLUTE
    lks32mc08x_dac.c                         0x00000000   Number         0  lks32mc08x_dac.o ABSOLUTE
    lks32mc08x_dma.c                         0x00000000   Number         0  lks32mc08x_dma.o ABSOLUTE
    lks32mc08x_dsp.c                         0x00000000   Number         0  lks32mc08x_dsp.o ABSOLUTE
    lks32mc08x_exti.c                        0x00000000   Number         0  lks32mc08x_exti.o ABSOLUTE
    lks32mc08x_gpio.c                        0x00000000   Number         0  lks32mc08x_gpio.o ABSOLUTE
    lks32mc08x_hall.c                        0x00000000   Number         0  lks32mc08x_hall.o ABSOLUTE
    lks32mc08x_i2c.c                         0x00000000   Number         0  lks32mc08x_i2c.o ABSOLUTE
    lks32mc08x_iwdg.c                        0x00000000   Number         0  lks32mc08x_iwdg.o ABSOLUTE
    lks32mc08x_mcpwm.c                       0x00000000   Number         0  lks32mc08x_mcpwm.o ABSOLUTE
    lks32mc08x_opa.c                         0x00000000   Number         0  lks32mc08x_opa.o ABSOLUTE
    lks32mc08x_spi.c                         0x00000000   Number         0  lks32mc08x_spi.o ABSOLUTE
    lks32mc08x_sys.c                         0x00000000   Number         0  lks32mc08x_sys.o ABSOLUTE
    lks32mc08x_tim.c                         0x00000000   Number         0  lks32mc08x_tim.o ABSOLUTE
    lks32mc08x_uart.c                        0x00000000   Number         0  lks32mc08x_uart.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    periph_driver/Source/startup_lks32mc08x.s 0x00000000   Number         0  startup_lks32mc08x.o ABSOLUTE
    pid_regulators.c                         0x00000000   Number         0  pid_regulators.o ABSOLUTE
    smo.c                                    0x00000000   Number         0  smo.o ABSOLUTE
    sys_init.c                               0x00000000   Number         0  sys_init.o ABSOLUTE
    task_scheduler.c                         0x00000000   Number         0  task_scheduler.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_lks32mc08x.o(RESET)
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_zi                             0x00000104   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x00000120   Section        2  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000009  0x00000122   Section       10  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$00000017  0x0000012c   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x00000130   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x00000132   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x00000132   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x00000134   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000136   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000136   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000136   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000136   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000136   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000136   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000136   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000138   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000138   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000138   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0000013e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0000013e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000142   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000142   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000014a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0000014c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0000014c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000150   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x00000158   Section       68  startup_lks32mc08x.o(.text)
    .text                                    0x0000019c   Section        0  llshl.o(.text)
    .text                                    0x000001bc   Section        0  llsshr.o(.text)
    .text                                    0x000001e4   Section        0  noretval__2printf.o(.text)
    .text                                    0x00000200   Section        0  __printf.o(.text)
    .text                                    0x0000026c   Section        0  _printf_dec.o(.text)
    .text                                    0x000002d8   Section        0  rt_memclr.o(.text)
    .text                                    0x00000318   Section        0  heapauxi.o(.text)
    .text                                    0x0000031e   Section        0  _printf_intcommon.o(.text)
    .text                                    0x000003d0   Section        0  _printf_char_file.o(.text)
    .text                                    0x000003f8   Section        0  rtudiv10.o(.text)
    _printf_input_char                       0x00000421   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x00000420   Section        0  _printf_char_common.o(.text)
    .text                                    0x00000450   Section        0  ferror.o(.text)
    .text                                    0x00000458   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x00000496   Section        0  exit.o(.text)
    .text                                    0x000004a8   Section        8  libspace.o(.text)
    .text                                    0x000004b0   Section        0  sys_exit.o(.text)
    .text                                    0x000004bc   Section        2  use_no_semi.o(.text)
    .text                                    0x000004be   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x000004c0   Section        0  interrupt.o(.text.ADC0_IRQHandler)
    __arm_cp.0_0                             0x00000500   Number         4  interrupt.o(.text.ADC0_IRQHandler)
    __arm_cp.0_1                             0x00000504   Number         4  interrupt.o(.text.ADC0_IRQHandler)
    __arm_cp.0_3                             0x00000508   Number         4  interrupt.o(.text.ADC0_IRQHandler)
    [Anonymous Symbol]                       0x0000050c   Section        0  lks32mc08x_adc.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x000005fe   Section        0  lks32mc08x_adc.o(.text.ADC_StructInit)
    [Anonymous Symbol]                       0x00000610   Section        0  clarke_park.o(.text.Clarke)
    __arm_cp.0_0                             0x00000638   Number         4  clarke_park.o(.text.Clarke)
    __arm_cp.0_1                             0x0000063c   Number         4  clarke_park.o(.text.Clarke)
    [Anonymous Symbol]                       0x00000640   Section        0  lks32mc08x_sys.o(.text.DSP_Init)
    __arm_cp.15_0                            0x00000650   Number         4  lks32mc08x_sys.o(.text.DSP_Init)
    __arm_cp.15_1                            0x00000654   Number         4  lks32mc08x_sys.o(.text.DSP_Init)
    [Anonymous Symbol]                       0x00000658   Section        0  foc_drive.o(.text.FOC_InitstruParama)
    [Anonymous Symbol]                       0x000006a8   Section        0  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_0                             0x000007d8   Number         4  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_1                             0x000007dc   Number         4  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_2                             0x000007e0   Number         4  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_3                             0x000007e4   Number         4  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_4                             0x000007e8   Number         4  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_5                             0x000007ec   Number         4  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_6                             0x000007f0   Number         4  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_7                             0x000007f4   Number         4  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_8                             0x000007f8   Number         4  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_9                             0x000007fc   Number         4  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_10                            0x00000800   Number         4  foc_drive.o(.text.FOC_Model)
    __arm_cp.2_11                            0x00000804   Number         4  foc_drive.o(.text.FOC_Model)
    [Anonymous Symbol]                       0x00000808   Section        0  lks32mc08x_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x000008d0   Section        0  lks32mc08x_gpio.o(.text.GPIO_PinAFConfig)
    __arm_cp.12_0                            0x00000a00   Number         4  lks32mc08x_gpio.o(.text.GPIO_PinAFConfig)
    __arm_cp.12_1                            0x00000a04   Number         4  lks32mc08x_gpio.o(.text.GPIO_PinAFConfig)
    __arm_cp.12_2                            0x00000a08   Number         4  lks32mc08x_gpio.o(.text.GPIO_PinAFConfig)
    [Anonymous Symbol]                       0x00000a0c   Section        0  lks32mc08x_gpio.o(.text.GPIO_ResetBits)
    [Anonymous Symbol]                       0x00000a14   Section        0  lks32mc08x_gpio.o(.text.GPIO_SetBits)
    [Anonymous Symbol]                       0x00000a1c   Section        0  lks32mc08x_gpio.o(.text.GPIO_StructInit)
    [Anonymous Symbol]                       0x00000a28   Section        0  hardware_init.o(.text.GPIO_init)
    __arm_cp.3_0                             0x00000b14   Number         4  hardware_init.o(.text.GPIO_init)
    __arm_cp.3_1                             0x00000b18   Number         4  hardware_init.o(.text.GPIO_init)
    __arm_cp.3_2                             0x00000b1c   Number         4  hardware_init.o(.text.GPIO_init)
    [Anonymous Symbol]                       0x00000b20   Section        0  pid_regulators.o(.text.HL_PI_AntiDump)
    [Anonymous Symbol]                       0x00000bd0   Section        0  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_0                             0x00000d48   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_1                             0x00000d4c   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_2                             0x00000d50   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_3                             0x00000d54   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_4                             0x00000d58   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_5                             0x00000d5c   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_6                             0x00000d60   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_7                             0x00000d64   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_8                             0x00000d68   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_9                             0x00000d6c   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_10                            0x00000d70   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_11                            0x00000d74   Number         4  hardware_init.o(.text.Hardware_init)
    __arm_cp.0_12                            0x00000d78   Number         4  hardware_init.o(.text.Hardware_init)
    [Anonymous Symbol]                       0x00000d7c   Section        0  key.o(.text.Key_in)
    [Anonymous Symbol]                       0x00000d82   Section        0  foc_drive.o(.text.MCL_Init)
    [Anonymous Symbol]                       0x00000da0   Section        0  hardware_init.o(.text.MCPWM0_RegUpdate)
    __arm_cp.9_0                             0x00000db8   Number         4  hardware_init.o(.text.MCPWM0_RegUpdate)
    [Anonymous Symbol]                       0x00000dbc   Section        0  lks32mc08x_mcpwm.o(.text.MCPWM_Init)
    __arm_cp.2_0                             0x00000fc8   Number         4  lks32mc08x_mcpwm.o(.text.MCPWM_Init)
    __arm_cp.2_2                             0x00000fcc   Number         4  lks32mc08x_mcpwm.o(.text.MCPWM_Init)
    [Anonymous Symbol]                       0x00000fd0   Section        0  lks32mc08x_mcpwm.o(.text.MCPWM_StructInit)
    [Anonymous Symbol]                       0x00000fdc   Section        0  lks32mc08x_opa.o(.text.OPA_Init)
    __arm_cp.0_2                             0x0000106c   Number         4  lks32mc08x_opa.o(.text.OPA_Init)
    [Anonymous Symbol]                       0x00001070   Section        0  lks32mc08x_opa.o(.text.OPA_StructInit)
    [Anonymous Symbol]                       0x0000107c   Section        0  lks32mc08x_mcpwm.o(.text.PWMOutputs)
    __arm_cp.0_0                             0x000010a0   Number         4  lks32mc08x_mcpwm.o(.text.PWMOutputs)
    __arm_cp.0_1                             0x000010a4   Number         4  lks32mc08x_mcpwm.o(.text.PWMOutputs)
    __arm_cp.0_2                             0x000010a8   Number         4  lks32mc08x_mcpwm.o(.text.PWMOutputs)
    __arm_cp.0_3                             0x000010ac   Number         4  lks32mc08x_mcpwm.o(.text.PWMOutputs)
    [Anonymous Symbol]                       0x000010b0   Section        0  clarke_park.o(.text.Park)
    [Anonymous Symbol]                       0x000010d8   Section        0  interrupt.o(.text.PendSV_Handler)
    __arm_cp.1_0                             0x000010ec   Number         4  interrupt.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x000010f0   Section        0  clarke_park.o(.text.RevPark_Circle_Limitation)
    __arm_cp.5_0                             0x00001118   Number         4  clarke_park.o(.text.RevPark_Circle_Limitation)
    [Anonymous Symbol]                       0x0000111c   Section        0  clarke_park.o(.text.Rev_Park)
    [Anonymous Symbol]                       0x00001142   Section        0  smo.o(.text.SMO_CalcElAngle)
    [Anonymous Symbol]                       0x00001212   Section        0  smo.o(.text.SMO_clear)
    [Anonymous Symbol]                       0x00001220   Section        0  smo.o(.text.SMO_init)
    __arm_cp.0_0                             0x00001238   Number         4  smo.o(.text.SMO_init)
    __arm_cp.0_1                             0x0000123c   Number         4  smo.o(.text.SMO_init)
    __arm_cp.0_2                             0x00001240   Number         4  smo.o(.text.SMO_init)
    __arm_cp.0_3                             0x00001244   Number         4  smo.o(.text.SMO_init)
    [Anonymous Symbol]                       0x00001248   Section        0  clarke_park.o(.text.SVPWM)
    __arm_cp.3_0                             0x000012c4   Number         4  clarke_park.o(.text.SVPWM)
    __arm_cp.3_1                             0x000012c8   Number         4  clarke_park.o(.text.SVPWM)
    [Anonymous Symbol]                       0x000012cc   Section        0  lks32mc08x_sys.o(.text.SYS_AnalogModuleClockCmd)
    [Anonymous Symbol]                       0x000012e8   Section        0  lks32mc08x_sys.o(.text.SYS_ModuleClockCmd)
    __arm_cp.12_0                            0x00001304   Number         4  lks32mc08x_sys.o(.text.SYS_ModuleClockCmd)
    [Anonymous Symbol]                       0x00001308   Section        0  lks32mc08x_sys.o(.text.SYS_SoftResetModule)
    __arm_cp.14_0                            0x00001318   Number         4  lks32mc08x_sys.o(.text.SYS_SoftResetModule)
    __arm_cp.14_1                            0x0000131c   Number         4  lks32mc08x_sys.o(.text.SYS_SoftResetModule)
    [Anonymous Symbol]                       0x00001320   Section        0  task_scheduler.o(.text.Sys_State_Machine)
    [Anonymous Symbol]                       0x000013c4   Section        0  task_scheduler.o(.text.Sys_State_Run)
    __arm_cp.1_0                             0x000014ec   Number         4  task_scheduler.o(.text.Sys_State_Run)
    __arm_cp.1_1                             0x000014f0   Number         4  task_scheduler.o(.text.Sys_State_Run)
    __arm_cp.1_2                             0x000014f4   Number         4  task_scheduler.o(.text.Sys_State_Run)
    [Anonymous Symbol]                       0x000014f8   Section        0  hardware_init.o(.text.SystemInit)
    __arm_cp.7_0                             0x00001558   Number         4  hardware_init.o(.text.SystemInit)
    __arm_cp.7_1                             0x0000155c   Number         4  hardware_init.o(.text.SystemInit)
    __arm_cp.7_2                             0x00001560   Number         4  hardware_init.o(.text.SystemInit)
    __arm_cp.7_3                             0x00001564   Number         4  hardware_init.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00001568   Section        0  clarke_park.o(.text.Trig_Functions)
    [Anonymous Symbol]                       0x00001570   Section        0  lks32mc08x_uart.o(.text.UART_Init)
    __arm_cp.0_0                             0x00001630   Number         4  lks32mc08x_uart.o(.text.UART_Init)
    __arm_cp.0_1                             0x00001634   Number         4  lks32mc08x_uart.o(.text.UART_Init)
    __arm_cp.0_2                             0x00001638   Number         4  lks32mc08x_uart.o(.text.UART_Init)
    __arm_cp.0_3                             0x0000163c   Number         4  lks32mc08x_uart.o(.text.UART_Init)
    __arm_cp.0_4                             0x00001640   Number         4  lks32mc08x_uart.o(.text.UART_Init)
    [Anonymous Symbol]                       0x00001644   Section        0  lks32mc08x_uart.o(.text.UART_SendData)
    [Anonymous Symbol]                       0x00001648   Section        0  lks32mc08x_uart.o(.text.UART_StructInit)
    [Anonymous Symbol]                       0x0000165c   Section        0  sys_init.o(.text.currentOffsetRead)
    __arm_cp.1_0                             0x00001700   Number         4  sys_init.o(.text.currentOffsetRead)
    __arm_cp.1_1                             0x00001704   Number         4  sys_init.o(.text.currentOffsetRead)
    __arm_cp.1_2                             0x00001708   Number         4  sys_init.o(.text.currentOffsetRead)
    __arm_cp.1_3                             0x0000170c   Number         4  sys_init.o(.text.currentOffsetRead)
    __arm_cp.1_4                             0x00001710   Number         4  sys_init.o(.text.currentOffsetRead)
    [Anonymous Symbol]                       0x00001738   Section        0  hardware_init.o(.text.fputc)
    __arm_cp.10_0                            0x00001764   Number         4  hardware_init.o(.text.fputc)
    [Anonymous Symbol]                       0x00001768   Section        0  lks32mc08x_dsp.o(.text.lks08x_dsp_arctan)
    __arm_cp.4_0                             0x000018a0   Number         4  lks32mc08x_dsp.o(.text.lks08x_dsp_arctan)
    [Anonymous Symbol]                       0x000018a4   Section        0  lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos)
    __arm_cp.0_0                             0x000018d8   Number         4  lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos)
    [Anonymous Symbol]                       0x000018dc   Section        0  lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt)
    __arm_cp.7_0                             0x00001904   Number         4  lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt)
    __arm_cp.7_1                             0x00001908   Number         4  lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt)
    [Anonymous Symbol]                       0x0000190c   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x00001964   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x00001968   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x000019a4   Section        0  sys_init.o(.text.sys_init)
    __arm_cp.0_0                             0x000019b0   Number         4  sys_init.o(.text.sys_init)
    .text_divfast                            0x000019b4   Section      502  aeabi_sdivfast.o(.text_divfast)
    i.Read_Trim                              0x00001bac   Section        0  lks32mc08x_nvr.o(i.Read_Trim)
    .bss                                     0x20000000   Section       96  libspace.o(.bss)
    dsp_flg                                  0x200000b4   Data           1  lks32mc08x_dsp.o(.bss.dsp_flg)
    [Anonymous Symbol]                       0x200000b4   Section        0  lks32mc08x_dsp.o(.bss.dsp_flg)
    Heap_Mem                                 0x20000168   Data         512  startup_lks32mc08x.o(HEAP)
    HEAP                                     0x20000168   Section      512  startup_lks32mc08x.o(HEAP)
    Stack_Mem                                0x20000368   Data         768  startup_lks32mc08x.o(STACK)
    STACK                                    0x20000368   Section      768  startup_lks32mc08x.o(STACK)
    __initial_sp                             0x20000668   Data           0  startup_lks32mc08x.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_lks32mc08x.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _mutex_acquire                            - Undefined Weak Reference
    _mutex_release                            - Undefined Weak Reference
    _printf_post_padding                      - Undefined Weak Reference
    _printf_pre_padding                       - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_lks32mc08x.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_lks32mc08x.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x00000105   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_percent                          0x00000121   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_d                                0x00000123   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_percent_end                      0x0000012d   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x00000131   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x00000133   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x00000135   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000137   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000137   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000137   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000137   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000137   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000137   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000137   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000139   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000139   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000139   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0000013f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0000013f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000143   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000143   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000014b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0000014d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0000014d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000151   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x00000159   Thumb Code    14  startup_lks32mc08x.o(.text)
    NMI_Handler                              0x00000167   Thumb Code     2  startup_lks32mc08x.o(.text)
    HardFault_Handler                        0x00000169   Thumb Code     2  startup_lks32mc08x.o(.text)
    SVC_Handler                              0x0000016b   Thumb Code     2  startup_lks32mc08x.o(.text)
    SysTick_Handler                          0x0000016f   Thumb Code     2  startup_lks32mc08x.o(.text)
    CAN_IRQHandler                           0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    CMP_IRQHandler                           0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    DMA_IRQHandler                           0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    DSP_IRQHandler                           0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    ENCODER0_IRQHandler                      0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    ENCODER1_IRQHandler                      0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    GPIO_IRQHandler                          0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    HALL_IRQHandler                          0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    I2C0_IRQHandler                          0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    MCPWM_IRQHandler                         0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    PWRDN_IRQHandler                         0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    SIF_IRQHandler                           0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    SPI0_IRQHandler                          0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    UART0_IRQHandler                         0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    UART1_IRQHandler                         0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    UTIMER0_IRQHandler                       0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    UTIMER1_IRQHandler                       0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    UTIMER2_IRQHandler                       0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    UTIMER3_IRQHandler                       0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    WAKE_IRQHandler                          0x00000171   Thumb Code     0  startup_lks32mc08x.o(.text)
    __user_initial_stackheap                 0x00000175   Thumb Code     0  startup_lks32mc08x.o(.text)
    __aeabi_llsl                             0x0000019d   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x0000019d   Thumb Code     0  llshl.o(.text)
    __aeabi_lasr                             0x000001bd   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x000001bd   Thumb Code     0  llsshr.o(.text)
    __2printf                                0x000001e5   Thumb Code    22  noretval__2printf.o(.text)
    __printf                                 0x00000201   Thumb Code   108  __printf.o(.text)
    _printf_int_dec                          0x0000026d   Thumb Code    90  _printf_dec.o(.text)
    _memset_w                                0x000002d9   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x000002f3   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x00000311   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x00000311   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x00000315   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x00000315   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x00000315   Thumb Code     4  rt_memclr.o(.text)
    __use_two_region_memory                  0x00000319   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0000031b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0000031d   Thumb Code     2  heapauxi.o(.text)
    _printf_int_common                       0x0000031f   Thumb Code   176  _printf_intcommon.o(.text)
    _printf_char_file                        0x000003d1   Thumb Code    34  _printf_char_file.o(.text)
    __rt_udiv10                              0x000003f9   Thumb Code    40  rtudiv10.o(.text)
    _printf_char_common                      0x0000042b   Thumb Code    32  _printf_char_common.o(.text)
    ferror                                   0x00000451   Thumb Code     8  ferror.o(.text)
    __user_setup_stackheap                   0x00000459   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x00000497   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x000004a9   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x000004a9   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x000004a9   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x000004b1   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x000004bd   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000004bd   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x000004bf   Thumb Code     0  indicate_semi.o(.text)
    ADC0_IRQHandler                          0x000004c1   Thumb Code    64  interrupt.o(.text.ADC0_IRQHandler)
    ADC_Init                                 0x0000050d   Thumb Code   242  lks32mc08x_adc.o(.text.ADC_Init)
    ADC_StructInit                           0x000005ff   Thumb Code    16  lks32mc08x_adc.o(.text.ADC_StructInit)
    Clarke                                   0x00000611   Thumb Code    40  clarke_park.o(.text.Clarke)
    DSP_Init                                 0x00000641   Thumb Code    16  lks32mc08x_sys.o(.text.DSP_Init)
    FOC_InitstruParama                       0x00000659   Thumb Code    80  foc_drive.o(.text.FOC_InitstruParama)
    FOC_Model                                0x000006a9   Thumb Code   304  foc_drive.o(.text.FOC_Model)
    GPIO_Init                                0x00000809   Thumb Code   200  lks32mc08x_gpio.o(.text.GPIO_Init)
    GPIO_PinAFConfig                         0x000008d1   Thumb Code   304  lks32mc08x_gpio.o(.text.GPIO_PinAFConfig)
    GPIO_ResetBits                           0x00000a0d   Thumb Code     8  lks32mc08x_gpio.o(.text.GPIO_ResetBits)
    GPIO_SetBits                             0x00000a15   Thumb Code     8  lks32mc08x_gpio.o(.text.GPIO_SetBits)
    GPIO_StructInit                          0x00000a1d   Thumb Code    10  lks32mc08x_gpio.o(.text.GPIO_StructInit)
    GPIO_init                                0x00000a29   Thumb Code   236  hardware_init.o(.text.GPIO_init)
    HL_PI_AntiDump                           0x00000b21   Thumb Code   176  pid_regulators.o(.text.HL_PI_AntiDump)
    Hardware_init                            0x00000bd1   Thumb Code   376  hardware_init.o(.text.Hardware_init)
    Key_in                                   0x00000d7d   Thumb Code     6  key.o(.text.Key_in)
    MCL_Init                                 0x00000d83   Thumb Code    28  foc_drive.o(.text.MCL_Init)
    MCPWM0_RegUpdate                         0x00000da1   Thumb Code    24  hardware_init.o(.text.MCPWM0_RegUpdate)
    MCPWM_Init                               0x00000dbd   Thumb Code   524  lks32mc08x_mcpwm.o(.text.MCPWM_Init)
    MCPWM_StructInit                         0x00000fd1   Thumb Code    10  lks32mc08x_mcpwm.o(.text.MCPWM_StructInit)
    OPA_Init                                 0x00000fdd   Thumb Code   144  lks32mc08x_opa.o(.text.OPA_Init)
    OPA_StructInit                           0x00001071   Thumb Code    10  lks32mc08x_opa.o(.text.OPA_StructInit)
    PWMOutputs                               0x0000107d   Thumb Code    36  lks32mc08x_mcpwm.o(.text.PWMOutputs)
    Park                                     0x000010b1   Thumb Code    38  clarke_park.o(.text.Park)
    PendSV_Handler                           0x000010d9   Thumb Code    20  interrupt.o(.text.PendSV_Handler)
    RevPark_Circle_Limitation                0x000010f1   Thumb Code    40  clarke_park.o(.text.RevPark_Circle_Limitation)
    Rev_Park                                 0x0000111d   Thumb Code    38  clarke_park.o(.text.Rev_Park)
    SMO_CalcElAngle                          0x00001143   Thumb Code   208  smo.o(.text.SMO_CalcElAngle)
    SMO_clear                                0x00001213   Thumb Code    12  smo.o(.text.SMO_clear)
    SMO_init                                 0x00001221   Thumb Code    24  smo.o(.text.SMO_init)
    SVPWM                                    0x00001249   Thumb Code   124  clarke_park.o(.text.SVPWM)
    SYS_AnalogModuleClockCmd                 0x000012cd   Thumb Code    28  lks32mc08x_sys.o(.text.SYS_AnalogModuleClockCmd)
    SYS_ModuleClockCmd                       0x000012e9   Thumb Code    28  lks32mc08x_sys.o(.text.SYS_ModuleClockCmd)
    SYS_SoftResetModule                      0x00001309   Thumb Code    16  lks32mc08x_sys.o(.text.SYS_SoftResetModule)
    Sys_State_Machine                        0x00001321   Thumb Code   164  task_scheduler.o(.text.Sys_State_Machine)
    Sys_State_Run                            0x000013c5   Thumb Code   296  task_scheduler.o(.text.Sys_State_Run)
    SystemInit                               0x000014f9   Thumb Code    96  hardware_init.o(.text.SystemInit)
    Trig_Functions                           0x00001569   Thumb Code     8  clarke_park.o(.text.Trig_Functions)
    UART_Init                                0x00001571   Thumb Code   192  lks32mc08x_uart.o(.text.UART_Init)
    UART_SendData                            0x00001645   Thumb Code     4  lks32mc08x_uart.o(.text.UART_SendData)
    UART_StructInit                          0x00001649   Thumb Code    18  lks32mc08x_uart.o(.text.UART_StructInit)
    currentOffsetRead                        0x0000165d   Thumb Code   164  sys_init.o(.text.currentOffsetRead)
    fputc                                    0x00001739   Thumb Code    44  hardware_init.o(.text.fputc)
    lks08x_dsp_arctan                        0x00001769   Thumb Code   312  lks32mc08x_dsp.o(.text.lks08x_dsp_arctan)
    lks08x_dsp_sin_cos                       0x000018a5   Thumb Code    52  lks32mc08x_dsp.o(.text.lks08x_dsp_sin_cos)
    lks08x_dsp_sqrt                          0x000018dd   Thumb Code    40  lks32mc08x_dsp.o(.text.lks08x_dsp_sqrt)
    main                                     0x0000190d   Thumb Code    88  main.o(.text.main)
    sys_init                                 0x000019a5   Thumb Code    12  sys_init.o(.text.sys_init)
    __aeabi_uidiv                            0x000019b5   Thumb Code    68  aeabi_sdivfast.o(.text_divfast)
    __aeabi_idiv                             0x000019f9   Thumb Code   434  aeabi_sdivfast.o(.text_divfast)
    Read_Trim                                0x00001bad   Thumb Code    50  lks32mc08x_nvr.o(i.Read_Trim)
    Region$$Table$$Base                      0x00001be8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001bf8   Number         0  anon$$obj.o(Region$$Table)
    __libspace_start                         0x20000000   Data          96  libspace.o(.bss)
    __stdout                                 0x20000060   Data          84  hardware_init.o(.bss.__stdout)
    __temporary_stack_top$libspace           0x20000060   Data           0  libspace.o(.bss)
    struFOC_CtrProc                          0x200000b8   Data         176  global_variable.o(.bss.struFOC_CtrProc)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00001bf8, Max: 0x00008000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00001bf8, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          577    RESET               startup_lks32mc08x.o
    0x000000c0   0x000000c0   0x00000008   Code   RO          720  * !!!main             c_p.l(__main.o)
    0x000000c8   0x000000c8   0x0000003c   Code   RO          912    !!!scatter          c_p.l(__scatter.o)
    0x00000104   0x00000104   0x0000001c   Code   RO          914    !!handler_zi        c_p.l(__scatter_zi.o)
    0x00000120   0x00000120   0x00000002   Code   RO          707    .ARM.Collect$$_printf_percent$$00000000  c_p.l(_printf_percent.o)
    0x00000122   0x00000122   0x0000000a   Code   RO          706    .ARM.Collect$$_printf_percent$$00000009  c_p.l(_printf_d.o)
    0x0000012c   0x0000012c   0x00000004   Code   RO          731    .ARM.Collect$$_printf_percent$$00000017  c_p.l(_printf_percent_end.o)
    0x00000130   0x00000130   0x00000002   Code   RO          773    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x00000132   0x00000132   0x00000000   Code   RO          787    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          789    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          791    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          794    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          796    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          798    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          801    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          803    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          805    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          807    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          809    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          811    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          813    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          815    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          817    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          819    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          821    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          825    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          827    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          829    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000000   Code   RO          831    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x00000132   0x00000132   0x00000002   Code   RO          832    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x00000134   0x00000134   0x00000002   Code   RO          867    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x00000136   0x00000136   0x00000000   Code   RO          895    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x00000136   0x00000136   0x00000000   Code   RO          897    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x00000136   0x00000136   0x00000000   Code   RO          900    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x00000136   0x00000136   0x00000000   Code   RO          903    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x00000136   0x00000136   0x00000000   Code   RO          905    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x00000136   0x00000136   0x00000000   Code   RO          908    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x00000136   0x00000136   0x00000002   Code   RO          909    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x00000138   0x00000138   0x00000000   Code   RO          722    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x00000138   0x00000138   0x00000000   Code   RO          735    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x00000138   0x00000138   0x00000006   Code   RO          747    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          737    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x0000013e   0x0000013e   0x00000004   Code   RO          738    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x00000142   0x00000142   0x00000000   Code   RO          740    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x00000142   0x00000142   0x00000008   Code   RO          741    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x0000014a   0x0000014a   0x00000002   Code   RO          778    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x0000014c   0x0000014c   0x00000000   Code   RO          838    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x0000014c   0x0000014c   0x00000004   Code   RO          839    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x00000150   0x00000150   0x00000006   Code   RO          840    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x00000156   0x00000156   0x00000002   PAD
    0x00000158   0x00000158   0x00000044   Code   RO          578    .text               startup_lks32mc08x.o
    0x0000019c   0x0000019c   0x00000020   Code   RO          674    .text               c_p.l(llshl.o)
    0x000001bc   0x000001bc   0x00000026   Code   RO          676    .text               c_p.l(llsshr.o)
    0x000001e2   0x000001e2   0x00000002   PAD
    0x000001e4   0x000001e4   0x0000001c   Code   RO          680    .text               c_p.l(noretval__2printf.o)
    0x00000200   0x00000200   0x0000006c   Code   RO          682    .text               c_p.l(__printf.o)
    0x0000026c   0x0000026c   0x0000006c   Code   RO          684    .text               c_p.l(_printf_dec.o)
    0x000002d8   0x000002d8   0x00000040   Code   RO          708    .text               c_p.l(rt_memclr.o)
    0x00000318   0x00000318   0x00000006   Code   RO          718    .text               c_p.l(heapauxi.o)
    0x0000031e   0x0000031e   0x000000b0   Code   RO          727    .text               c_p.l(_printf_intcommon.o)
    0x000003ce   0x000003ce   0x00000002   PAD
    0x000003d0   0x000003d0   0x00000028   Code   RO          729    .text               c_p.l(_printf_char_file.o)
    0x000003f8   0x000003f8   0x00000028   Code   RO          732    .text               c_p.l(rtudiv10.o)
    0x00000420   0x00000420   0x00000030   Code   RO          751    .text               c_p.l(_printf_char_common.o)
    0x00000450   0x00000450   0x00000008   Code   RO          753    .text               c_p.l(ferror.o)
    0x00000458   0x00000458   0x0000003e   Code   RO          757    .text               c_p.l(sys_stackheap_outer.o)
    0x00000496   0x00000496   0x00000010   Code   RO          762    .text               c_p.l(exit.o)
    0x000004a6   0x000004a6   0x00000002   PAD
    0x000004a8   0x000004a8   0x00000008   Code   RO          774    .text               c_p.l(libspace.o)
    0x000004b0   0x000004b0   0x0000000c   Code   RO          833    .text               c_p.l(sys_exit.o)
    0x000004bc   0x000004bc   0x00000002   Code   RO          856    .text               c_p.l(use_no_semi.o)
    0x000004be   0x000004be   0x00000000   Code   RO          858    .text               c_p.l(indicate_semi.o)
    0x000004be   0x000004be   0x00000002   PAD
    0x000004c0   0x000004c0   0x0000004c   Code   RO           69    .text.ADC0_IRQHandler  interrupt.o
    0x0000050c   0x0000050c   0x000000f2   Code   RO          153    .text.ADC_Init      lks32mc08x_adc.o
    0x000005fe   0x000005fe   0x00000010   Code   RO          155    .text.ADC_StructInit  lks32mc08x_adc.o
    0x0000060e   0x0000060e   0x00000002   PAD
    0x00000610   0x00000610   0x00000030   Code   RO          124    .text.Clarke        clarke_park.o
    0x00000640   0x00000640   0x00000018   Code   RO          505    .text.DSP_Init      lks32mc08x_sys.o
    0x00000658   0x00000658   0x00000050   Code   RO          108    .text.FOC_InitstruParama  foc_drive.o
    0x000006a8   0x000006a8   0x00000160   Code   RO          112    .text.FOC_Model     foc_drive.o
    0x00000808   0x00000808   0x000000c8   Code   RO          322    .text.GPIO_Init     lks32mc08x_gpio.o
    0x000008d0   0x000008d0   0x0000013c   Code   RO          346    .text.GPIO_PinAFConfig  lks32mc08x_gpio.o
    0x00000a0c   0x00000a0c   0x00000008   Code   RO          338    .text.GPIO_ResetBits  lks32mc08x_gpio.o
    0x00000a14   0x00000a14   0x00000008   Code   RO          334    .text.GPIO_SetBits  lks32mc08x_gpio.o
    0x00000a1c   0x00000a1c   0x0000000a   Code   RO          324    .text.GPIO_StructInit  lks32mc08x_gpio.o
    0x00000a26   0x00000a26   0x00000002   PAD
    0x00000a28   0x00000a28   0x000000f8   Code   RO           17    .text.GPIO_init     hardware_init.o
    0x00000b20   0x00000b20   0x000000b0   Code   RO          144    .text.HL_PI_AntiDump  pid_regulators.o
    0x00000bd0   0x00000bd0   0x000001ac   Code   RO           11    .text.Hardware_init  hardware_init.o
    0x00000d7c   0x00000d7c   0x00000006   Code   RO           86    .text.Key_in        key.o
    0x00000d82   0x00000d82   0x0000001c   Code   RO          114    .text.MCL_Init      foc_drive.o
    0x00000d9e   0x00000d9e   0x00000002   PAD
    0x00000da0   0x00000da0   0x0000001c   Code   RO           29    .text.MCPWM0_RegUpdate  hardware_init.o
    0x00000dbc   0x00000dbc   0x00000214   Code   RO          427    .text.MCPWM_Init    lks32mc08x_mcpwm.o
    0x00000fd0   0x00000fd0   0x0000000a   Code   RO          425    .text.MCPWM_StructInit  lks32mc08x_mcpwm.o
    0x00000fda   0x00000fda   0x00000002   PAD
    0x00000fdc   0x00000fdc   0x00000094   Code   RO          441    .text.OPA_Init      lks32mc08x_opa.o
    0x00001070   0x00001070   0x0000000a   Code   RO          443    .text.OPA_StructInit  lks32mc08x_opa.o
    0x0000107a   0x0000107a   0x00000002   PAD
    0x0000107c   0x0000107c   0x00000034   Code   RO          423    .text.PWMOutputs    lks32mc08x_mcpwm.o
    0x000010b0   0x000010b0   0x00000026   Code   RO          126    .text.Park          clarke_park.o
    0x000010d6   0x000010d6   0x00000002   PAD
    0x000010d8   0x000010d8   0x00000018   Code   RO           71    .text.PendSV_Handler  interrupt.o
    0x000010f0   0x000010f0   0x0000002c   Code   RO          134    .text.RevPark_Circle_Limitation  clarke_park.o
    0x0000111c   0x0000111c   0x00000026   Code   RO          128    .text.Rev_Park      clarke_park.o
    0x00001142   0x00001142   0x000000d0   Code   RO           98    .text.SMO_CalcElAngle  smo.o
    0x00001212   0x00001212   0x0000000c   Code   RO           96    .text.SMO_clear     smo.o
    0x0000121e   0x0000121e   0x00000002   PAD
    0x00001220   0x00001220   0x00000028   Code   RO           94    .text.SMO_init      smo.o
    0x00001248   0x00001248   0x00000084   Code   RO          130    .text.SVPWM         clarke_park.o
    0x000012cc   0x000012cc   0x0000001c   Code   RO          501    .text.SYS_AnalogModuleClockCmd  lks32mc08x_sys.o
    0x000012e8   0x000012e8   0x00000020   Code   RO          499    .text.SYS_ModuleClockCmd  lks32mc08x_sys.o
    0x00001308   0x00001308   0x00000018   Code   RO          503    .text.SYS_SoftResetModule  lks32mc08x_sys.o
    0x00001320   0x00001320   0x000000a4   Code   RO           53    .text.Sys_State_Machine  task_scheduler.o
    0x000013c4   0x000013c4   0x00000134   Code   RO           55    .text.Sys_State_Run  task_scheduler.o
    0x000014f8   0x000014f8   0x00000070   Code   RO           25    .text.SystemInit    hardware_init.o
    0x00001568   0x00001568   0x00000008   Code   RO          132    .text.Trig_Functions  clarke_park.o
    0x00001570   0x00001570   0x000000d4   Code   RO          552    .text.UART_Init     lks32mc08x_uart.o
    0x00001644   0x00001644   0x00000004   Code   RO          556    .text.UART_SendData  lks32mc08x_uart.o
    0x00001648   0x00001648   0x00000012   Code   RO          554    .text.UART_StructInit  lks32mc08x_uart.o
    0x0000165a   0x0000165a   0x00000002   PAD
    0x0000165c   0x0000165c   0x000000dc   Code   RO           44    .text.currentOffsetRead  sys_init.o
    0x00001738   0x00001738   0x00000030   Code   RO           31    .text.fputc         hardware_init.o
    0x00001768   0x00001768   0x0000013c   Code   RO          275    .text.lks08x_dsp_arctan  lks32mc08x_dsp.o
    0x000018a4   0x000018a4   0x00000038   Code   RO          267    .text.lks08x_dsp_sin_cos  lks32mc08x_dsp.o
    0x000018dc   0x000018dc   0x00000030   Code   RO          281    .text.lks08x_dsp_sqrt  lks32mc08x_dsp.o
    0x0000190c   0x0000190c   0x00000098   Code   RO            2    .text.main          main.o
    0x000019a4   0x000019a4   0x00000010   Code   RO           42    .text.sys_init      sys_init.o
    0x000019b4   0x000019b4   0x000001f6   Code   RO          711    .text_divfast       c_p.l(aeabi_sdivfast.o)
    0x00001baa   0x00001baa   0x00000002   PAD
    0x00001bac   0x00001bac   0x0000003c   Code   RO          585    i.Read_Trim         lks32mc08x_nvr.lib(lks32mc08x_nvr.o)
    0x00001be8   0x00001be8   0x00000010   Data   RO          911    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00001bf8, Size: 0x00000668, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000        -       0x00000060   Zero   RW          775    .bss                c_p.l(libspace.o)
    0x20000060        -       0x00000054   Zero   RW           33    .bss.__stdout       hardware_init.o
    0x200000b4        -       0x00000001   Zero   RW          283    .bss.dsp_flg        lks32mc08x_dsp.o
    0x200000b5   0x00001bf8   0x00000003   PAD
    0x200000b8        -       0x000000b0   Zero   RW           80    .bss.struFOC_CtrProc  global_variable.o
    0x20000168        -       0x00000200   Zero   RW          576    HEAP                startup_lks32mc08x.o
    0x20000368        -       0x00000300   Zero   RW          575    STACK               startup_lks32mc08x.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       308         20          0          0          0       3890   clarke_park.o
       460         48          0          0          0       4708   foc_drive.o
         0          0          0          0        176       2721   global_variable.o
       864         88          0          0         84      10723   hardware_init.o
       100         16          0          0          0       1377   interrupt.o
         6          0          0          0          0       2811   key.o
       258          0          0          0          0       4669   lks32mc08x_adc.o
       420         16          0          0          1       4205   lks32mc08x_dsp.o
       542         76          0          0          0       5364   lks32mc08x_gpio.o
       594         24          0          0          0       4933   lks32mc08x_mcpwm.o
       158         20          0          0          0       1933   lks32mc08x_opa.o
       108         20          0          0          0       4742   lks32mc08x_sys.o
       234         20          0          0          0       4405   lks32mc08x_uart.o
       152         64          0          0          0       1242   main.o
       176          0          0          0          0       1917   pid_regulators.o
       260         16          0          0          0       2764   smo.o
        68         32        192          0       1280        680   startup_lks32mc08x.o
       236         60          0          0          0       1410   sys_init.o
       472         16          0          0          0       4549   task_scheduler.o

    ----------------------------------------------------------------------
      5432        536        208          0       1544      69043   Object Totals
         0          0         16          0          0          0   (incl. Generated)
        16          0          0          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
       108          0          0          0          0         76   __printf.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        48          6          0          0          0         88   _printf_char_common.o
        40          6          0          0          0         72   _printf_char_file.o
        10          0          0          0          0          0   _printf_d.o
       108         18          0          0          0         76   _printf_dec.o
       176          0          0          0          0         84   _printf_intcommon.o
         2          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
       502          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         8          0          0          0          0         60   ferror.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        28          6          0          0          0         84   noretval__2printf.o
        64          0          0          0          0        108   rt_memclr.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        40          0          0          0          0         60   rtudiv10.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        60         10          0          0          0       7496   lks32mc08x_nvr.o

    ----------------------------------------------------------------------
      1520         62          0          0         96       8980   Library Totals
        12          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1448         52          0          0         96       1484   c_p.l
        60         10          0          0          0       7496   lks32mc08x_nvr.lib

    ----------------------------------------------------------------------
      1520         62          0          0         96       8980   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      6952        598        208          0       1640      77007   Grand Totals
      6952        598        208          0       1640      77007   ELF Image Totals
      6952        598        208          0          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 7160 (   6.99kB)
    Total RW  Size (RW Data + ZI Data)              1640 (   1.60kB)
    Total ROM Size (Code + RO Data + RW Data)       7160 (   6.99kB)

==============================================================================

